#include<stdio.h>

int main(){
    int x1[2]={0,1};
    int x2[2]={0,1};
    int x3[2]={0,1};
    int a[4],b[4],x21[4],a1[4],b1[4];
    int z[8],z1[8];
    int i=0,k=0;

    //HW1(a)
    a[0]=!(x2[0] | x1[0]);
    a[1]=!(x2[0] | x1[1]);
    a[2]=!(x2[1] | x1[0]);
    a[3]=!(x2[1] | x1[1]);

    b[0]=!(x3[0] & x2[0]);
    b[1]=!(x3[0] & x2[1]);
    b[2]=!(x3[1] & x2[0]);
    b[3]=!(x3[1] & x2[1]);

    z[0]=b[0] | a[0];
    z[1]=b[0] | a[1];

    z[2]=b[1] | a[2];
    z[3]=b[1] | a[3];

    z[4]=b[2] | a[0];
    z[5]=b[2] | a[1];
    
    z[6]=b[3] | a[2];
    z[7]=b[3] | a[3];
    printf("hw(a)\n");
    printf("x3  x2  x1   a   b   z\n");
    printf(" 0   0   0   %d   %d   %d\n",a[0],b[0],z[0]);
    printf(" 0   0   1   %d   %d   %d\n",a[1],b[0],z[1]);
    printf(" 0   1   0   %d   %d   %d\n",a[2],b[1],z[2]);
    printf(" 0   1   1   %d   %d   %d\n",a[3],b[1],z[3]);
    printf(" 1   0   0   %d   %d   %d\n",a[0],b[2],z[4]);
    printf(" 1   0   1   %d   %d   %d\n",a[1],b[2],z[5]);
    printf(" 1   1   0   %d   %d   %d\n",a[2],b[3],z[6]);
    printf(" 1   1   1   %d   %d   %d\n",a[3],b[3],z[7]);

    //HW1(b) AND-bridging 

    a1[0]=!(x2[0] | x1[0]);
    a1[1]=!(x2[0] | x1[1]);
    a1[2]=!(x2[1] | x1[0]);
    a1[3]=!(x2[1] | x1[1]);

    b1[0]=!(x3[0] & x2[0]);
    b1[1]=!(x3[0] & x2[1]);
    b1[2]=!(x3[1] & x2[0]);
    b1[3]=!(x3[1] & x2[1]);

    z1[0]=b1[0] & a1[0];
    z1[1]=b1[0] & a1[1];

    z1[2]=b1[1] & a1[2];
    z1[3]=b1[1] & a1[3];

    z1[4]=b1[2] & a1[0];
    z1[5]=b1[2] & a1[1];
    
    z1[6]=b1[3] & a1[2];
    z1[7]=b1[3] & a1[3];
    printf("\n");
    printf("hw(b)   AND-bridging\n");
    printf("x3  x2  x1    a     b     z\n");
    printf(" 0   0   0   %d/%d   %d/%d   %d/%d\n",a[0],z1[0],b[0],z1[0],z[0],z1[0]);
    printf(" 0   0   1   %d/%d   %d/%d   %d/%d\n",a[1],z1[1],b[0],z1[1],z[1],z1[1]);
    printf(" 0   1   0   %d/%d   %d/%d   %d/%d\n",a[2],z1[2],b[1],z1[2],z[2],z1[2]);
    printf(" 0   1   1   %d/%d   %d/%d   %d/%d\n",a[3],z1[3],b[1],z1[3],z[3],z1[3]);
    printf(" 1   0   0   %d/%d   %d/%d   %d/%d\n",a[0],z1[4],b[2],z1[4],z[4],z1[4]);
    printf(" 1   0   1   %d/%d   %d/%d   %d/%d\n",a[1],z1[5],b[2],z1[5],z[5],z1[5]);
    printf(" 1   1   0   %d/%d   %d/%d   %d/%d\n",a[2],z1[6],b[3],z1[6],z[6],z1[6]);
    printf(" 1   1   1   %d/%d   %d/%d   %d/%d\n",a[3],z1[7],b[3],z1[7],z[7],z1[7]);
    printf("\n");
    while(1){
        if(z[k]!=z1[k])
            i=i+1;
        k=k+1;
        if(k==7)
            break;
    }
    printf("total and-bridge fault: %d",i);
    i=0;
    k=0;
    //HW1(b) OR-bridging 
    x21[0]=x3[0]|x2[0];
    x21[1]=x3[0]|x2[1];
    x21[2]=x3[1]|x2[0];
    x21[3]=x3[1]|x2[1];

    a1[0]=!(x21[0] | x1[0]);
    a1[1]=!(x21[0] | x1[1]);
    a1[2]=!(x21[1] | x1[0]);
    a1[3]=!(x21[1] | x1[1]);

    b1[0]=!(x21[0]&x2[0]);
    b1[1]=!(x21[1]&x2[1]);
    b1[2]=!(x21[2]&x2[0]);
    b1[3]=!(x21[3]&x2[1]);

    z1[0]=b1[0] | a1[0];
    z1[1]=b1[0] | a1[1];

    z1[2]=b1[1] | a1[2];
    z1[3]=b1[1] | a1[3];

    z1[4]=b1[2] | a1[2];
    z1[5]=b1[2] | a1[3];
    
    z1[6]=b1[3] | a1[2];
    z1[7]=b1[3] | a1[3];
    printf("\n");
    printf("hw(b)   OR-bridging\n");
    printf("  x3  x2  x1    y1   y2     a     b     z\n");
    printf(" 0/%d   0   0   0/%d    0    %d/%d   %d/%d   %d/%d\n",x21[0],x21[0],a[0],a1[0],b[0],b1[0],z[0],z1[0]);
    printf(" 0/%d   0   1   0/%d    0    %d/%d   %d/%d   %d/%d\n",x21[0],x21[0],a[1],a1[1],b[0],b1[0],z[1],z1[1]);
    printf(" 0/%d   1   0   1/%d    1    %d/%d   %d/%d   %d/%d\n",x21[1],x21[1],a[2],a1[2],b[1],b1[1],z[2],z1[2]);
    printf(" 0/%d   1   1   1/%d    1    %d/%d   %d/%d   %d/%d\n",x21[1],x21[1],a[3],a1[3],b[1],b1[1],z[3],z1[3]);
    printf(" 1/%d   0   0   0/%d    0    %d/%d   %d/%d   %d/%d\n",x21[2],x21[2],a[0],a1[2],b[2],b1[2],z[4],z1[4]);
    printf(" 1/%d   0   1   0/%d    0    %d/%d   %d/%d   %d/%d\n",x21[2],x21[2],a[1],a1[3],b[2],b1[2],z[5],z1[5]);
    printf(" 1/%d   1   0   1/%d    1    %d/%d   %d/%d   %d/%d\n",x21[3],x21[3],a[2],a1[2],b[3],b1[3],z[6],z1[6]);
    printf(" 1/%d   1   1   1/%d    1    %d/%d   %d/%d   %d/%d\n",x21[3],x21[3],a[3],a1[3],b[3],b1[3],z[7],z1[7]);
    printf("\n");

    while(1){
        if(z[k]!=z1[k])
            i=i+1;
        k=k+1;
        if(k==7)
            break;
    }
    printf("total or-bridge fault: %d\n",i);
    i=0;

    return 0;
}